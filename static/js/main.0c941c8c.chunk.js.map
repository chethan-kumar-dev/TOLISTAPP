{"version":3,"sources":["check.png","App.js","index.js"],"names":["Todo","useState","task","setTask","taskList","setTaskList","className","type","placeholder","value","onInput","e","target","onClick","taskThem","id","Math","floor","random","isCompleted","map","t","filter","element","findIndex","ele","newTaskList","console","log","completed","src","image","alt","ReactDOM","render","document","getElementById"],"mappings":"iMAAe,G,MAAA,IAA0B,mC,OCQzB,SAASA,IAAO,IAAD,EACTC,mBAAS,IADA,mBACvBC,EADuB,KAClBC,EADkB,OAEDF,mBAAS,IAFR,mBAEvBG,EAFuB,KAEdC,EAFc,KA8B7B,OACE,qBAAKC,UAAU,OAAf,SACH,gCACE,sBAAKA,UAAU,eAAf,UACA,uBAAOA,UAAU,aAAaC,KAAK,OAAOC,YAAY,iBAAiBC,MAAOP,EAAMQ,QA9BpF,SAAiBC,GAChBR,EAAQQ,EAAEC,OAAOH,UA8Bf,wBAAQH,UAAU,YAAYO,QA5BjC,WACG,IAAMC,EAAS,CACbC,GAAGC,KAAKC,MAAoB,IAAdD,KAAKE,UACnBT,MAAMP,EACNiB,aAAY,GAEdd,EAAY,GAAD,mBAAKD,GAAL,CAAcU,MAsBzB,oBAEF,6BACCV,EAASgB,KAAI,SAAAC,GAAC,OAAE,qBAAIf,UAAWe,EAAEF,YAAY,QAAQ,OAArC,UAA0DE,EAAEZ,MAC7E,sBAAKH,UAAU,gBAAf,UACE,wBAAQA,UAAU,OAAOO,QAAS,SAACF,GAAD,OAxBlBI,EAwB+BM,EAAEN,QAvBjDV,EAAYD,EAASkB,QAAO,SAACD,GAAD,OAAKA,EAAEN,KAAKA,MADzC,IAAiBA,GAwBhB,oBACA,wBAAQT,UAAU,OAAOO,QAAS,SAACF,GAAD,OAtBnC,SAAmBA,EAAEI,GACpB,IAAMQ,EAAQnB,EAASoB,WAAU,SAACC,GAAD,OAAOA,EAAIV,KAAOA,KAC/CW,EAAY,YAAItB,GAEpBsB,EAAYH,GAAZ,2BACKG,EAAYH,IADjB,IAEEJ,aAAY,IAEdQ,QAAQC,IAAIF,EAAYH,IACxBlB,EAAYqB,GAa2BG,CAAUlB,EAAEU,EAAEN,KAArD,uBACA,qBAAKT,UAAWe,EAAEF,YAAY,OAAO,OAAQW,IAAKC,EAAOC,IAAI,UAJIX,EAAEN,cCzCzEkB,IAASC,OAAO,cAAClC,EAAD,IAAQmC,SAASC,eAAe,W","file":"static/js/main.0c941c8c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/check.f306c526.png\";","import React, { useState } from 'react';\n\nimport './App.css';\nimport image from \"./check.png\"\n\n// eslint-disable-next-line no-undef\n\n\n export default function Todo(){\n   var [task,setTask]=useState(\"\");\n   var [taskList,setTaskList]=useState([]);\n\n   function hanlder(e){\n    setTask(e.target.value)\n   }\n   function show(){\n      const taskThem={\n        id:Math.floor(Math.random()*1000),\n        value:task,\n        isCompleted:false\n      }\n      setTaskList([...taskList,taskThem])\n     }\n\n     function delet(e,id){\n      setTaskList(taskList.filter((t)=>t.id!==id));\n     }\n     function completed(e,id){\n      const element=taskList.findIndex((ele)=>ele.id === id);\n      var newTaskList=[...taskList];\n     \n      newTaskList[element]={\n        ...newTaskList[element],\n        isCompleted:true\n      }\n      console.log(newTaskList[element])\n      setTaskList(newTaskList)\n     }\n  return(\n    <div className=\"cont\">\n <div>\n   <div className=\"input-holder\">\n   <input className=\"inputField\" type=\"text\" placeholder=\"Enter task....\" value={task} onInput={hanlder}></input>\n      <button className=\"addButton\" onClick={show}>ADD</button>\n   </div>\n    <ul>\n    {taskList.map(t=><li className={t.isCompleted?\"cross\":\"none\"} key={t.id} >{t.value}\n    <div className=\"btn-container\">\n      <button className=\"btn1\" onClick={(e)=>delet(e,t.id)}>delete</button>\n      <button className=\"btn2\" onClick={(e)=>completed(e,t.id)} >completed</button>\n      <img className={t.isCompleted?\"show\":\"hide\"} src={image} alt=\"\"></img>\n    </div>\n   </li>)}\n    </ul>\n    \n    </div>\n    </div>\n   \n  )\n }\n  \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Todo from './App';\n\n\nReactDOM.render(<Todo/>,document.getElementById('root'));\n\n\n"],"sourceRoot":""}